#!/usr/bin/env php
<?php

use MultiTester\MultiTester;
use MultiTester\Summary;

set_time_limit(-1);

function includeIfExists($file)
{
    if (file_exists($file)) {
        return include $file;
    }

    return false;
}

function getLoader()
{
    global $possibleFolders;

    foreach ($possibleFolders as $dir) {
        if ($loader = includeIfExists($dir . '/autoload.php')) {
            if (class_exists('MultiTester\MultiTester')) {
                return $loader;
            }

            $loader->unregister();
        }
    }

    return false;
}

$possibleFolders = array_unique(array_filter(array_map('realpath', [
    getcwd() . '/vendor',
    __DIR__ . '/../vendor',
    __DIR__ . '/../../..',
]), 'file_exists'));

//Check for autoload file
if (!getLoader()) {
    echo "Composer's autoload.php not found in checked folders:\n - " . implode("\n - ", $possibleFolders) . "\n";
    exit(1);
}

try {
    $code = (new MultiTester())->run($argv) ? 0 : 1;
} catch (\Exception $e) {
    if (Summary::isColorSupported()) { // is colored?
        $errorString = " \033[41;1;97m  ERROR  \033[0m\033[31m {$e->getMessage()} \033[0m" ;
    } else {
        $errorString = 'ERROR:' . $e->getMessage();
    }
    echo PHP_EOL . $errorString . PHP_EOL;
    exit(1);
}
exit($code);
